name: Red Tide Data Update

on:
  schedule:
    - cron: '*/15 * * * *'  # 2:20 AM UTC = 9:20 PM EST (10:20 PM EDT)
  workflow_dispatch:  # Manual trigger
    inputs:
      test_mode:
        description: "Run in test mode (limited operations)"
        type: boolean
        required: false
        default: false
      skip_wordpress:
        description: "Skip WordPress sync (Google Sheets only)"
        type: boolean
        required: false
        default: false
      wordpress_test_only:
        description: "Test WordPress only (skip Google Sheets, use mock data)"
        type: boolean
        required: false
        default: false
      test_limit:
        description: "Number of items to process in test mode"
        type: string
        required: false
        default: "3"

env:
  # Global environment variables
  TEST_MODE: ${{ inputs.test_mode == true && 'true' || 'false' }}
  TEST_LIMIT: ${{ inputs.test_limit || '3' }}
  SKIP_WORDPRESS: ${{ inputs.skip_wordpress == true && 'true' || 'false' }}
  WORDPRESS_TEST_ONLY: ${{ inputs.wordpress_test_only == true && 'true' || 'false' }}

jobs:
  update-red-tide-data:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Validate environment and files
      run: |
        echo "üîç Validating environment..."
        echo "Current time (UTC): $(date -u)"
        echo "Test mode: $TEST_MODE"
        echo "Skip WordPress: $SKIP_WORDPRESS"
        echo "WordPress test only: $WORDPRESS_TEST_ONLY"
        
        # Check if files exist
        echo "üìÅ Checking required files..."
        if [ -f "fetch_hab_data.py" ]; then
          echo "‚úÖ fetch_hab_data.py exists"
        else
          echo "‚ùå fetch_hab_data.py missing"
        fi
        
        if [ -f "sync_to_wordpress.py" ]; then
          echo "‚úÖ sync_to_wordpress.py exists"
        else
          echo "‚ùå sync_to_wordpress.py missing"
        fi
        
        if [ -f "requirements.txt" ]; then
          echo "‚úÖ requirements.txt exists"
        else
          echo "‚ùå requirements.txt missing"
        fi

    - name: Fetch HAB data and update Google Sheets
      if: ${{ !inputs.wordpress_test_only }}
      env:
        GOOGLE_SERVICE_ACCOUNT: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}
        GOOGLE_SHEET_ID: ${{ secrets.GOOGLE_SHEET_ID }}
        TEST_MODE: ${{ env.TEST_MODE }}
        TEST_LIMIT: ${{ env.TEST_LIMIT }}
      run: |
        echo "üåä Starting HAB data fetch..."
        echo "Timestamp: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
        python fetch_hab_data.py

    - name: Sync to WordPress
      if: ${{ !inputs.skip_wordpress }}
      env:
        WORDPRESS_SITE_URL: ${{ secrets.WORDPRESS_SITE_URL }}
        WORDPRESS_USERNAME: ${{ secrets.WORDPRESS_USERNAME }}
        WORDPRESS_APP_PASSWORD: ${{ secrets.WORDPRESS_APP_PASSWORD }}
        GOOGLE_SERVICE_ACCOUNT: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}
        GOOGLE_SHEET_ID: ${{ secrets.GOOGLE_SHEET_ID }}
        TEST_MODE: ${{ env.TEST_MODE }}
        TEST_LIMIT: ${{ env.TEST_LIMIT }}
        WORDPRESS_TEST_ONLY: ${{ env.WORDPRESS_TEST_ONLY }}
      run: |
        echo "üîÑ Starting WordPress sync..."
        echo "Timestamp: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
        python sync_to_wordpress.py

    - name: Create execution summary
      if: always()
      run: |
        echo "## Red Tide Processing Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Execution Time**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
        echo "- **Test Mode**: $TEST_MODE" >> $GITHUB_STEP_SUMMARY
        echo "- **Skip WordPress**: $SKIP_WORDPRESS" >> $GITHUB_STEP_SUMMARY
        echo "- **WordPress Test Only**: $WORDPRESS_TEST_ONLY" >> $GITHUB_STEP_SUMMARY
        
        if [ "$?" -eq 0 ]; then
          echo "- **Status**: ‚úÖ Success" >> $GITHUB_STEP_SUMMARY
        else
          echo "- **Status**: ‚ùå Failed" >> $GITHUB_STEP_SUMMARY
        fi

    - name: Notify on failure
      if: failure()
      run: |
        echo "‚ùå Red tide update failed at $(date -u)"
        echo "Check the logs above for error details."
        echo "Job was supposed to run at 9:20 PM EST / 10:20 PM EDT"
        # Add webhook notification here if desired
